
; ******** Source: source\TeensyROMC64.asm
     1                          ; MIT License
     2                          ; 
     3                          ; Copyright (c) 2023 Travis Smith
     4                          ; 
     5                          ; Permission is hereby granted, free of charge, to any person obtaining a copy of this software 
     6                          ; and associated documentation files (the "Software"), to deal in the Software without 
     7                          ; restriction, including without limitation the rights to use, copy, modify, merge, publish, 
     8                          ; distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom 
     9                          ; the Software is furnished to do so, subject to the following conditions:
    10                          ; 
    11                          ; The above copyright notice and this permission notice shall be included in all copies or 
    12                          ; substantial portions of the Software.
    13                          ; 
    14                          ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING 
    15                          ; BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
    16                          ; NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
    17                          ; DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
    18                          ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    19                          
    20                          
    21                          ; ********************************   Symbols   ********************************   
    22                             !convtab pet   ;key in and text out conv to PetSCII throughout
    23                          
    24                             ;RAM Registers:
    25                             PtrAddrLo   = $fb
    26                             PtrAddrHi   = $fc
    27                             Ptr2AddrLo  = $fd
    28                             Ptr2AddrHi  = $fe
    29                             
    30                             ;RAM coppies:
    31                             MainCodeRAM = $c000    ;Main execution point, 4k available.  Only using 2.42 KB as of 2/16/23
    32                                                    ;Could move to 0801 if more space needed
    33                             SIDCodeRAM  = $1000 
    34                          
    35                          ;********************************   Cartridge begin   ********************************   
    36                          
    37                          ;8k Cartridge/ROM   ROML $8000-$9FFF
    38                          ;  Could make 16k if needed
    39                          * = $9fff                     ; set a byte to cause fill up to -$9fff (or $bfff if 16K)
    40  9fff 00                    !byte 0
    41                             
    42                          * = $8000  ;Cart Start
    43                          ;  jump vectors and autostart key     
    44  8000 0980                  !word Coldstart    ; Cartridge cold-start vector   ;!byte $09, $80 = !word $8009
    45  8002 1a80                  !word Warmstart    ; Cartridge warm-start vector
    46  8004 c3c2cd3830            !byte $c3, $c2, $cd, $38, $30    ; CBM8O - Autostart key
    47                          ;  KERNAL RESET ROUTINE
    48                          Coldstart:
    49  8009 78                    sei
    50  800a 8e16d0                stx $d016            ; Turn on VIC for PAL / NTSC check
    51  800d 20a3fd                jsr $fda3            ; IOINIT - Init CIA chips
    52  8010 2050fd                jsr $fd50            ; RANTAM - Clear/test system RAM
    53  8013 2015fd                jsr $fd15            ; RESTOR - Init KERNAL RAM vectors
    54  8016 205bff                jsr $ff5b            ; CINT   - Init VIC and screen editor
    55  8019 58                    cli                  ; Re-enable IRQ interrupts
    56                          ;  BASIC RESET  Routine
    57                          Warmstart:
    58  801a 2053e4                jsr $e453            ; Init BASIC RAM vectors
    59  801d 20bfe3                jsr $e3bf            ; Main BASIC RAM Init routine
    60  8020 2022e4                jsr $e422            ; Power-up message / NEW command
    61  8023 a2fb                  ldx #$fb
    62  8025 9a                    txs                  ; Reduce stack pointer for BASIC
    63                             
    64                          
    65                          ;******************************* Main Code Start ************************************   
    66                             
    67  8026 204480                jsr SIDCopyToRAM
    68  8029 202f80                jsr MainCopyToRAM
    69  802c 4c00c0                jmp MainCodeRAM
    70                             
    71                          ; ******************************* Subroutines ******************************* 
    72                          MainCopyToRAM:
    73  802f a993                  lda #>MainCode
    74  8031 a0e0                  ldy #<MainCode   
    75  8033 85fc                  sta PtrAddrHi
    76  8035 84fb                  sty PtrAddrLo 
    77  8037 a29d                  ldx #>EndMainCode
    78                             
    79  8039 a9c0                  lda #>MainCodeRAM
    80  803b a000                  ldy #<MainCodeRAM   
    81  803d 85fe                  sta Ptr2AddrHi
    82  803f 84fd                  sty Ptr2AddrLo 
    83  8041 4c5680                jmp CodeCopy
    84                             
    85                          SIDCopyToRAM:
    86                             ;have to copy SID code to RAM because it self modifies...
    87  8044 a980                  lda #>SIDCode
    88  8046 a069                  ldy #<SIDCode   
    89  8048 85fc                  sta PtrAddrHi
    90  804a 84fb                  sty PtrAddrLo 
    91  804c a293                  ldx #>EndSIDCode
    92                             
    93  804e a910                  lda #>SIDCodeRAM
    94  8050 a000                  ldy #<SIDCodeRAM   
    95  8052 85fe                  sta Ptr2AddrHi
    96  8054 84fd                  sty Ptr2AddrLo 
    97                             
    98                          CodeCopy:
    99                             ; Copy from (PtrAddrLo/Hi) to (Ptr2AddrLo/Hi), x reg is last page to copy
   100  8056 e8                    inx ;last page+1, will copy ((EndCode-StartCode) | 0xFF) bytes
   101  8057 a000                  ldy #0 ;initialize
   102  8059 b1fb               -  lda (PtrAddrLo), y 
   103  805b 91fd                  sta (Ptr2AddrLo),y
   104  805d c8                    iny
   105  805e d0f9                  bne -   
   106  8060 e6fc                  inc PtrAddrHi
   107  8062 e6fe                  inc Ptr2AddrHi
   108  8064 e4fc                  cpx PtrAddrHi
   109  8066 d0f1                  bne -
   110  8068 60                    rts
   111                             
   112                          SIDCode = *
   113  8069 4cb1104c0b114c83...   !binary "source\SleepDirt_extra_ntsc_1000_6581.sid.seq",, $7c+2   ;;skip header and 2 byte load address
   114                          EndSIDCode = *
   115                          
   116                          MainCode = *
   117  93e0 a9048d20d0a9008d...   !binary "build\MainMenu_C000.bin"
   118                          EndMainCode = *
   119                          
   120                             
   121                          EndOfAllCode = *
   122  9d94 00                    !byte 0

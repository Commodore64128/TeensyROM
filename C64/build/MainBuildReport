
; ******** Source: source\MainMenu_C000.asm
     1                          ; MIT License
     2                          ; 
     3                          ; Copyright (c) 2023 Travis Smith
     4                          ; 
     5                          ; Permission is hereby granted, free of charge, to any person obtaining a copy of this software 
     6                          ; and associated documentation files (the "Software"), to deal in the Software without 
     7                          ; restriction, including without limitation the rights to use, copy, modify, merge, publish, 
     8                          ; distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom 
     9                          ; the Software is furnished to do so, subject to the following conditions:
    10                          ; 
    11                          ; The above copyright notice and this permission notice shall be included in all copies or 
    12                          ; substantial portions of the Software.
    13                          ; 
    14                          ; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING 
    15                          ; BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND 
    16                          ; NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, 
    17                          ; DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, 
    18                          ; OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    19                          
    20                          
    21                          ; ********************************   Symbols   ********************************   
    22                             !convtab pet   ;key in and text out conv to PetSCII throughout
    23                          
    24                             ;Zero page RAM Registers:
    25                             PtrAddrLo   = $fb
    26                             PtrAddrHi   = $fc
    27                             Ptr2AddrLo  = $fd
    28                             Ptr2AddrHi  = $fe
    29                             ;other RAM Registers
    30                             RegMenuPageStart = $0334
    31                             SIDVoicCont      = $0335
    32                             SIDAttDec        = $0336
    33                             SIDSusRel        = $0337
    34                             SIDDutyHi        = $0338
    35                             
    36                             ;RAM coppies:
    37                             MainCodeRAM = $c000    ;this file
    38                             SIDCodeRAM = $1000 
    39                          
    40                             ScreenMemStart    = $0400
    41                             BorderColorReg    = $d020 
    42                             BackgndColorReg   = $d021
    43                             SIDLoc            = $d400
    44                             IO1Port           = $de00
    45                             TODHoursBCD       = $dc0b
    46                             TODMinBCD         = $dc0a
    47                             TODSecBCD         = $dc09
    48                             TODTenthSecBCD    = $dc08
    49                             
    50                             ;!!!!!These need to match Teensy Code: Menu_Regs.h !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    51                             MaxItemNameLength = 28
    52                             
    53                             rRegStatus        =  0
    54                             rRegStrAddrLo     =  1
    55                             rRegStrAddrHi     =  2
    56                             rRegStreamData    =  3
    57                             wRegControl       =  4
    58                             rRegPresence1     =  5
    59                             rRegPresence2     =  6
    60                             rRegLastHourBCD   =  7
    61                             rRegLastMinBCD    =  8
    62                             rRegLastSecBCD    =  9
    63                             rWRegCurrMenuWAIT = 10
    64                             rwRegSelItem      = 11
    65                             rRegNumItems      = 12
    66                             rRegItemType      = 13
    67                          
    68                             StartSIDRegs      = 14 ;start of SID Regs, matching SID Reg order ($D400)
    69                             rRegSIDFreqLo1    = StartSIDRegs +  0
    70                             rRegSIDFreqHi1    = StartSIDRegs +  1
    71                             rRegSIDDutyLo1    = StartSIDRegs +  2
    72                             rRegSIDDutyHi1    = StartSIDRegs +  3
    73                             rRegSIDVoicCont1  = StartSIDRegs +  4
    74                             rRegSIDAttDec1    = StartSIDRegs +  5
    75                             rRegSIDSusRel1    = StartSIDRegs +  6
    76                          
    77                             rRegSIDFreqLo2    = StartSIDRegs +  7
    78                             rRegSIDFreqHi2    = StartSIDRegs +  8
    79                             rRegSIDDutyLo2    = StartSIDRegs +  9
    80                             rRegSIDDutyHi2    = StartSIDRegs + 10
    81                             rRegSIDVoicCont2  = StartSIDRegs + 11
    82                             rRegSIDAttDec2    = StartSIDRegs + 12
    83                             rRegSIDSusRel2    = StartSIDRegs + 13
    84                          
    85                             rRegSIDFreqLo3    = StartSIDRegs + 14
    86                             rRegSIDFreqHi3    = StartSIDRegs + 15
    87                             rRegSIDDutyLo3    = StartSIDRegs + 16
    88                             rRegSIDDutyHi3    = StartSIDRegs + 17
    89                             rRegSIDVoicCont3  = StartSIDRegs + 18
    90                             rRegSIDAttDec3    = StartSIDRegs + 19
    91                             rRegSIDSusRel3    = StartSIDRegs + 20
    92                          
    93                             rRegSIDFreqCutLo  = StartSIDRegs + 21
    94                             rRegSIDFreqCutHi  = StartSIDRegs + 22
    95                             rRegSIDFCtlReson  = StartSIDRegs + 23
    96                             rRegSIDVolFltSel  = StartSIDRegs + 24
    97                             EndSIDRegs        = StartSIDRegs + 25
    98                          
    99                             rRegSIDStrStart   = StartSIDRegs + 26
   100                             ;  9: 3 chars per voice (oct, note, shrp)
   101                             ;  1: Out of voices indicator
   102                             ;  3: spaces betw
   103                             ; 14 total w// term:  ON# ON# ON# X
   104                             rRegSIDOutOfVoices= StartSIDRegs + 38
   105                             rRegSIDStringTerm = StartSIDRegs + 39
   106                              
   107                             rRegItemNameStart = rRegSIDStringTerm + 1 ;MaxItemNameLength bytes long (incl term)
   108                          
   109                             rsReady      = 0x5a
   110                             rsChangeMenu = 0x9d
   111                             rsStartItem  = 0xb1
   112                             rsGetTime    = 0xe6
   113                             ;rsError      = 0x24
   114                          
   115                             rmtSD        = 0
   116                             rmtTeensy    = 1
   117                             rmtUSBHost   = 2
   118                             rmtUSBDrive  = 3
   119                             
   120                             rCtlVanish           = 0
   121                             rCtlVanishReset      = 1
   122                             rCtlStartSelItemWAIT = 2
   123                             rCtlGetTimeWAIT      = 3
   124                          
   125                             rtNone = 0  ;synch with TblItemType below
   126                             rt16k  = 1
   127                             rt8kHi = 2
   128                             rt8kLo = 3
   129                             rtPrg  = 4
   130                             rtUnk  = 5
   131                             rtCrt  = 6
   132                             rtDir  = 7
   133                             
   134                          ;!!!!!!!!!!!!!!!!  End Teensy matching  !!!!!!!!!!!!!!!!!!
   135                          
   136                          
   137                             ;Kernal routines:
   138                             IRQDefault = $ea31
   139                             SendChar   = $ffd2
   140                             ScanKey    = $ff9f ;SCNKEY
   141                             GetIn      = $ffe4 ;GETIN
   142                             SetCursor  = $fff0 ;PLOT
   143                             
   144                             ;BASIC routines:
   145                             BasicColdStartVect = $a000 ; $e394  58260
   146                             BasicWarmStartVect = $a002 ; $e37b  58235
   147                             PrintString =  $ab1e
   148                          
   149                             ;chr$ symbols
   150                             ChrBlack   = 144
   151                             ChrWhite   = 5
   152                             ChrRed     = 28
   153                             ChrCyan    = 159
   154                             ChrPurple  = 156
   155                             ChrGreen   = 30
   156                             ChrBlue    = 31
   157                             ChrYellow  = 158 
   158                             ChrOrange  = 129
   159                             ChrBrown   = 149
   160                             ChrLtRed   = 150
   161                             ChrDrkGrey = 151
   162                             ChrMedGrey = 152
   163                             ChrLtGreen = 153
   164                             ChrLtBlue  = 154
   165                             ChrLtGrey  = 155
   166                             
   167                             ChrF1      = 133
   168                             ChrF2      = 137
   169                             ChrF3      = 134
   170                             ChrF4      = 138
   171                             ChrF5      = 135
   172                             ChrF6      = 139
   173                             ChrF7      = 136
   174                             ChrF8      = 140
   175                             ChrToLower = 14
   176                             ChrToUpper = 142
   177                             ChrRvsOn   = 18
   178                             ChrRvsOff  = 146
   179                             ChrClear   = 147
   180                             ChrReturn  = 13
   181                             ChrSpace   = 32
   182                             ChrCSRSUp  = 145
   183                             ChrCSRSDn  = 17
   184                             
   185                          ;poke colors
   186                             pokeBlack   = 0
   187                             pokeWhite   = 1
   188                             pokeRed     = 2
   189                             pokeCyan    = 3
   190                             pokePurple  = 4
   191                             pokeGreen   = 5
   192                             pokeBlue    = 6
   193                             pokeYellow  = 7
   194                             pokeOrange  = 8
   195                             pokeBrown   = 9
   196                             pokeLtRed   = 10
   197                             pokeDrkGrey = 11
   198                             pokeMedGrey = 12
   199                             pokeLtGreen = 13
   200                             pokeLtBlue  = 14
   201                             pokeLtGrey  = 15
   202                             
   203                             ;color scheme:
   204                             BorderColor      = pokePurple
   205                             BackgndColor     = pokeBlack
   206                             TimeColor        = ChrOrange
   207                             MenuMiscColor    = ChrGreen
   208                             ROMNumColor      = ChrDrkGrey
   209                             OptionColor      = ChrYellow
   210                             SourcesColor     = ChrLtBlue
   211                             TypeColor        = ChrBlue
   212                             NameColor        = ChrLtGreen
   213                             MaxMenuDispItems = 16
   214                             M2SDataColumn    = 14
   215                          
   216                          ;******************************* Main Code Start ************************************   
   217                          
   218                          * = MainCodeRAM
   219                          Start:
   220                          
   221                          ;screen setup:     
   222  c000 a904                  lda #BorderColor
   223  c002 8d20d0                sta BorderColorReg
   224  c005 a900                  lda #BackgndColor
   225  c007 8d21d0                sta BackgndColorReg
   226                             
   227  c00a a900                  lda #$00
   228  c00c 200010                jsr SIDCodeRAM ;Initialize music
   229  c00f 206cc5                jsr SIDMusicOn ;Start the music!
   230                             
   231                          ;check for HW:
   232  c012 ad05de                lda rRegPresence1+IO1Port
   233  c015 c955                  cmp #$55
   234  c017 d007                  bne NoHW
   235  c019 ad06de                lda rRegPresence2+IO1Port
   236  c01c c9aa                  cmp #$AA
   237  c01e f00a                  beq +
   238                          NoHW:
   239  c020 a90a                  lda #<MsgNoHW
   240  c022 a0c7                  ldy #>MsgNoHW
   241  c024 201eab                jsr PrintString  
   242  c027 4c27c0             -  jmp -
   243                          
   244  c02a a900               +  lda #rCtlVanish ;Deassert Game & ExROM
   245  c02c 8d04de                sta wRegControl+IO1Port
   246                          
   247  c02f 20f7c0                jsr ListMenuItemsInit
   248                             ;jsr SynchEthernetTime
   249                          
   250                          WaitForKey:     
   251  c032 2079c2                jsr DisplayTime
   252  c035 20e4ff                jsr GetIn    
   253  c038 f0f8                  beq WaitForKey
   254                          
   255  c03a c941                  cmp #'a'  
   256  c03c 3019                  bmi +   ;skip if below 'a'
   257  c03e c952                  cmp #'a'+ MaxMenuDispItems + 1  
   258  c040 1015                  bpl +   ;skip if above MaxMenuDispItems
   259                             ;convert to ROM number
   260  c042 38                    sec       ;set to subtract without carry
   261  c043 e941                  sbc #'a'  ;now 0-?
   262  c045 18                    clc
   263  c046 6d3403                adc RegMenuPageStart   
   264                             ;ROMSelected, ROM num in acc
   265  c049 cd0cde                cmp rRegNumItems+IO1Port 
   266  c04c 10e4                  bpl WaitForKey   ;skip if above num of ROMs
   267  c04e 8d0bde                sta rwRegSelItem+IO1Port ;select Item from list
   268  c051 20c3c1                jsr SelectMenuItem
   269  c054 4c32c0                jmp WaitForKey
   270                          
   271  c057 c911               +  cmp #ChrCSRSDn  ;Next Page
   272  c059 d014                  bne +
   273  c05b ad3403                lda RegMenuPageStart
   274  c05e 18                    clc
   275  c05f 6910                  adc #MaxMenuDispItems
   276  c061 cd0cde                cmp rRegNumItems+IO1Port
   277  c064 10cc                  bpl WaitForKey  ;already on last page
   278  c066 8d3403                sta RegMenuPageStart
   279  c069 20fcc0                jsr ListMenuItems
   280  c06c 4c32c0                jmp WaitForKey
   281                          
   282  c06f c991               +  cmp #ChrCSRSUp  ;Prev Page
   283  c071 d011                  bne +
   284  c073 ad3403                lda RegMenuPageStart
   285                             ;cmp #0     
   286  c076 f0ba                  beq WaitForKey  ;already on first page
   287  c078 38                    sec
   288  c079 e910                  sbc #MaxMenuDispItems
   289  c07b 8d3403                sta RegMenuPageStart
   290  c07e 20fcc0                jsr ListMenuItems
   291  c081 4c32c0                jmp WaitForKey  
   292                          
   293  c084 c985               +  cmp #ChrF1  ;Teensy mem Menu
   294  c086 d008                  bne +
   295  c088 a901                  lda #rmtTeensy
   296  c08a 20f1c0                jsr ListMenuItemsChangeInit
   297  c08d 4c32c0                jmp WaitForKey  
   298                          
   299  c090 c989               +  cmp #ChrF2  ;Exit to BASIC
   300  c092 d008                  bne +
   301  c094 a901                  lda #rCtlVanishReset ;reset to BASIC
   302  c096 8d04de                sta wRegControl+IO1Port
   303  c099 4c99c0             -  jmp -  ;should be resetting to BASIC
   304                          
   305  c09c c986               +  cmp #ChrF3  ;SD Card Menu
   306  c09e d008                  bne +
   307  c0a0 a900                  lda #rmtSD
   308  c0a2 20f1c0                jsr ListMenuItemsChangeInit
   309  c0a5 4c32c0                jmp WaitForKey  
   310                          
   311  c0a8 c98a               +  cmp #ChrF4  ;toggle music
   312  c0aa d013                  bne +
   313  c0ac a2c5                  ldx #>irqRastSID
   314  c0ae ec1503                cpx $315  ;see if the IRQ is pointing at our SID routine
   315  c0b1 f006                  beq on
   316  c0b3 206cc5                jsr SIDMusicOn ;sid is off, turn it on
   317  c0b6 4c32c0                jmp WaitForKey
   318  c0b9 2096c5             on jsr SIDMusicOff ;sid is on, turn it off
   319  c0bc 4c32c0                jmp WaitForKey  
   320                          
   321  c0bf c987               +  cmp #ChrF5  ;USB Drive Menu
   322  c0c1 d008                  bne +
   323  c0c3 a903                  lda #rmtUSBDrive
   324  c0c5 20f1c0                jsr ListMenuItemsChangeInit
   325  c0c8 4c32c0                jmp WaitForKey  
   326                          
   327  c0cb c98b               +  cmp #ChrF6  ;Synch Ethernet Time
   328  c0cd d006                  bne +
   329  c0cf 2059c2                jsr SynchEthernetTime
   330  c0d2 4c32c0                jmp WaitForKey  
   331                          
   332  c0d5 c988               +  cmp #ChrF7  ;Exe USB Host file
   333  c0d7 d008                  bne +
   334  c0d9 a902                  lda #rmtUSBHost
   335  c0db 20f1c0                jsr ListMenuItemsChangeInit
   336  c0de 4c32c0                jmp WaitForKey
   337                          
   338  c0e1 c98c               +  cmp #ChrF8  ;Credits, options, SID???
   339  c0e3 d009                  bne +
   340  c0e5 201dc3                jsr MIDI2SID
   341  c0e8 20fcc0                jsr ListMenuItems
   342  c0eb 4c32c0                jmp WaitForKey
   343                          
   344                          
   345                          
   346  c0ee 4c32c0             +  jmp WaitForKey
   347                          
   348                             
   349                          ; ******************************* Subroutines ******************************* 
   350                          ;                           list out rom number, type, & names
   351                          
   352                          Sssssssssssssssssssssssubroutines:
   353                          ListMenuItemsChangeInit:  ;Prep: Load acc with menu to change to
   354  c0f1 8d0ade                sta rWRegCurrMenuWAIT+IO1Port  ;must wait on a write (load dir)
   355  c0f4 2002c2                jsr WaitForTR
   356                          ListMenuItemsInit:
   357  c0f7 a900                  lda #0       ;initialize to first Item
   358  c0f9 8d3403                sta RegMenuPageStart
   359                          ListMenuItems:  ;Prep: load RegMenuPageStart with first ROM on menu page
   360  c0fc a9fa                  lda #<MsgBanner
   361  c0fe a0c5                  ldy #>MsgBanner
   362  c100 201eab                jsr PrintString 
   363  c103 a928                  lda #<MsgFrom
   364  c105 a0c6                  ldy #>MsgFrom
   365  c107 201eab                jsr PrintString 
   366                             ;print menu source:
   367  c10a ad0ade                lda rWRegCurrMenuWAIT+IO1Port ;don't have to wait on a read
   368  c10d c900                  cmp #rmtSD
   369  c10f d007                  bne +
   370  c111 a946                  lda #<MsgMenuSD
   371  c113 a0c7                  ldy #>MsgMenuSD
   372  c115 4c32c1                jmp cont1
   373                          
   374  c118 c901               +  cmp #rmtTeensy
   375  c11a d007                  bne +
   376  c11c a94f                  lda #<MsgMenuTeensy
   377  c11e a0c7                  ldy #>MsgMenuTeensy
   378  c120 4c32c1                jmp cont1
   379                             
   380  c123 c903               +  cmp #rmtUSBDrive
   381  c125 d007                  bne +
   382  c127 a965                  lda #<MsgMenuUSBDrive
   383  c129 a0c7                  ldy #>MsgMenuUSBDrive
   384  c12b 4c32c1                jmp cont1
   385                             
   386                          +  ;cmp #rmtUSBHost
   387                             ;bne +
   388  c12e a95b                  lda #<MsgMenuUSBHost
   389  c130 a0c7                  ldy #>MsgMenuUSBHost
   390                             ;jmp cont1
   391                             
   392                          cont1   
   393  c132 201eab                jsr PrintString
   394  c135 ad0cde                lda rRegNumItems+IO1Port
   395  c138 d00a                  bne +
   396  c13a a932                  lda #<MsgNoItems
   397  c13c a0c7                  ldy #>MsgNoItems
   398  c13e 201eab                jsr PrintString
   399  c141 4cb3c1                jmp finishMenu
   400  c144 ad3403             +  lda RegMenuPageStart
   401  c147 8d0bde                sta rwRegSelItem+IO1Port
   402  c14a a9c1                  lda #'A' ;initialize to start of page
   403                          nextLine
   404  c14c 48                    pha ;remember menu letter
   405  c14d a90d                  lda #ChrReturn
   406  c14f 20d2ff                jsr SendChar
   407                             
   408                          ;print option letter
   409  c152 a99e                  lda #OptionColor
   410  c154 20d2ff                jsr SendChar
   411  c157 a920                  lda #ChrSpace
   412  c159 20d2ff                jsr SendChar
   413  c15c a912                  lda #ChrRvsOn
   414  c15e 20d2ff                jsr SendChar
   415  c161 68                    pla
   416  c162 48                    pha
   417  c163 20d2ff                jsr SendChar
   418  c166 a992                  lda #ChrRvsOff
   419  c168 20d2ff                jsr SendChar
   420  c16b a92d                  lda #'-'
   421  c16d 20d2ff                jsr SendChar
   422                          ; print name
   423  c170 a999                  lda #NameColor
   424  c172 20d2ff                jsr SendChar
   425  c175 a936                  lda #<rRegItemNameStart+IO1Port
   426  c177 a0de                  ldy #>rRegItemNameStart+IO1Port
   427  c179 201eab                jsr PrintString
   428                          ;align to col
   429  c17c 38                    sec
   430  c17d 20f0ff                jsr SetCursor ;read current to load y (row)
   431  c180 a01f                  ldy #MaxItemNameLength + 3  ;col
   432  c182 18                    clc
   433  c183 20f0ff                jsr SetCursor
   434                          ; print type
   435  c186 a91f                  lda #TypeColor
   436  c188 20d2ff                jsr SendChar
   437  c18b a250                  ldx #<TblItemType
   438  c18d a0c9                  ldy #>TblItemType
   439  c18f ad0dde                lda rRegItemType+IO1Port 
   440  c192 200ac3                jsr Print4CharTable
   441                          ;print ROM #
   442  c195 a997                  lda #ROMNumColor
   443  c197 20d2ff                jsr SendChar
   444  c19a ad0bde                lda rwRegSelItem+IO1Port
   445  c19d 20d5c2                jsr PrintHexByte
   446                             
   447                          ;line is done printing, check for next...
   448  c1a0 68                    pla ;menu select letter
   449  c1a1 ee0bde                inc rwRegSelItem+IO1Port
   450  c1a4 ae0bde                ldx rwRegSelItem+IO1Port
   451  c1a7 ec0cde                cpx rRegNumItems+IO1Port
   452  c1aa f007                  beq finishMenu
   453  c1ac 18                    clc
   454  c1ad 6901                  adc #01
   455  c1af c9d1                  cmp #'A' + MaxMenuDispItems
   456  c1b1 d099                  bne nextLine  
   457                          finishMenu
   458  c1b3 a214                  ldx #20 ;row
   459  c1b5 a000                  ldy #0  ;col
   460  c1b7 18                    clc
   461  c1b8 20f0ff                jsr SetCursor
   462  c1bb a930                  lda #<MsgSelect
   463  c1bd a0c6                  ldy #>MsgSelect
   464  c1bf 201eab                jsr PrintString
   465  c1c2 60                    rts
   466                          
   467                          ;Execute/select an item from the list
   468                          ; Dir, ROM, copy PRG to RAM and run, etc
   469                          ;Pre-Load rwRegSelItem+IO1Port with Item # to execute/select
   470                          SelectMenuItem:
   471  c1c3 ac0dde                ldy rRegItemType+IO1Port ;grab this now it will change if new directory is loaded
   472  c1c6 a902                  lda #rCtlStartSelItemWAIT
   473  c1c8 8d04de                sta wRegControl+IO1Port
   474  c1cb 2002c2                jsr WaitForTR ;if it's a good ROM image, it won't return from this
   475  c1ce c004                  cpy #rtPrg
   476  c1d0 f004                  beq PRGStart ;if it's a program, x-fer and lunch, otherwise reprint menu and return
   477  c1d2 20f7c0                jsr ListMenuItemsInit
   478  c1d5 60                    rts
   479                          PRGStart
   480  c1d6 68                    pla ;pull the jsr return info from the stack, we're not going back!
   481  c1d7 2096c5                jsr SIDMusicOff
   482  c1da 2012c2                jsr PRGtoMem
   483  c1dd a91e                  lda #ChrGreen
   484  c1df 20d2ff                jsr SendChar 
   485  c1e2 a993                  lda #ChrClear
   486  c1e4 20d2ff                jsr SendChar 
   487                             ;load keyboard buffer with "run\n":  
   488  c1e7 a952                  lda #'r'
   489  c1e9 8d7702                sta $0277  ;kbd buff 0
   490  c1ec a955                  lda #'u'
   491  c1ee 8d7802                sta $0278 ;kbd buff 1
   492  c1f1 a94e                  lda #'n'
   493  c1f3 8d7902                sta $0279  ;kbd buff 2
   494  c1f6 a90d                  lda #ChrReturn
   495  c1f8 8d7a02                sta $027a  ;kbd buff 3
   496  c1fb a904                  lda #4
   497  c1fd 85c6                  sta $C6  ;# chars in kbd buff (4 of 10 max)
   498  c1ff 6c02a0                jmp (BasicWarmStartVect)  
   499                             
   500                          WaitForTR:  ;wait for ready status, uses acc and X
   501  c202 a205                  ldx#5 ;require 5 consecutive reads of ready to continue
   502  c204 ee4e04                inc ScreenMemStart+40*2-2 ;end of 'Time' print loc.
   503  c207 ad00de             -  lda rRegStatus+IO1Port
   504  c20a c95a                  cmp #rsReady
   505  c20c d0f4                  bne WaitForTR
   506  c20e ca                    dex
   507  c20f d0f6                  bne -
   508  c211 60                    rts
   509                             
   510                          PRGtoMem:
   511                             ;stream PRG file from TeensyROM to RAM
   512                             ;assumes TeensyROM is set up to transfer, PRG selected and waited to complete
   513                             ;rRegStrAddrHi+IO1Port is zero when inactive/complete
   514                             
   515  c212 ad02de                lda rRegStrAddrHi+IO1Port
   516  c215 d007                  bne +
   517  c217 a935                  lda #<MsgErrNoData;no data to read!
   518  c219 a0c9                  ldy #>MsgErrNoData
   519  c21b 4c40c2                jmp ErrOut
   520  c21e 85fc               +  sta PtrAddrHi
   521  c220 ad01de                lda rRegStrAddrLo+IO1Port   
   522  c223 85fb                  sta PtrAddrLo
   523  c225 a000                  ldy #0   ;zero offset
   524  c227 ad03de             -  lda rRegStreamData+IO1Port ;read from rRegStreamData+IO1Port increments address/checks for end
   525  c22a 91fb                  sta (PtrAddrLo), y 
   526  c22c ad02de                lda rRegStrAddrHi+IO1Port ;are we done?
   527  c22f f00e                  beq rt 
   528  c231 c8                    iny
   529  c232 d0f3                  bne -
   530  c234 e6fc                  inc PtrAddrHi
   531  c236 d0ef                  bne -
   532  c238 a947                  lda #<MsgErrOverflow ;Overflow!
   533  c23a a0c9                  ldy #>MsgErrOverflow
   534  c23c 4c40c2                jmp ErrOut
   535  c23f 60                 rt rts
   536                            
   537                          ErrOut:   
   538                             ;Error msg pointer stored in acc/y
   539  c240 48                    pha
   540  c241 98                    tya
   541  c242 48                    pha
   542  c243 a213                  ldx #19 ;row
   543  c245 a000                  ldy #0  ;col
   544  c247 18                    clc
   545  c248 20f0ff                jsr SetCursor
   546  c24b a92c                  lda #<MsgError
   547  c24d a0c9                  ldy #>MsgError
   548  c24f 201eab                jsr PrintString   
   549  c252 68                    pla
   550  c253 a8                    tay
   551  c254 68                    pla
   552  c255 201eab                jsr PrintString
   553  c258 60                    rts
   554                          
   555                          SynchEthernetTime:
   556  c259 a903                  lda #rCtlGetTimeWAIT
   557  c25b 8d04de                sta wRegControl+IO1Port
   558  c25e 2002c2                jsr WaitForTR 
   559  c261 ad07de                lda rRegLastHourBCD+IO1Port
   560  c264 8d0bdc                sta TODHoursBCD  ;stop TOD regs incrementing
   561  c267 ad08de                lda rRegLastMinBCD+IO1Port
   562  c26a 8d0adc                sta TODMinBCD
   563  c26d ad09de                lda rRegLastSecBCD+IO1Port
   564  c270 8d09dc                sta TODSecBCD
   565  c273 a909                  lda #9
   566  c275 8d08dc                sta TODTenthSecBCD ;have to write 10ths to release latch, start incrementing
   567  c278 60                    rts
   568                             
   569                          DisplayTime:
   570  c279 a201                  ldx #1 ;row
   571  c27b a01d                  ldy #29  ;col
   572  c27d 18                    clc
   573  c27e 20f0ff                jsr SetCursor
   574  c281 a981                  lda #TimeColor
   575  c283 20d2ff                jsr SendChar
   576  c286 ad0bdc                lda TODHoursBCD ;latches time in regs (stops incrementing)
   577  c289 a8                    tay ;save for re-use
   578  c28a 291f                  and #$1f
   579  c28c d004                  bne nz   ;if hours is 0, make it 12...
   580  c28e 98                    tya
   581  c28f 0912                  ora #$12
   582  c291 a8                    tay ;re-save for re-use
   583  c292 98                 nz tya
   584  c293 2910                  and #$10
   585  c295 d005                  bne +
   586  c297 a920                  lda #ChrSpace
   587  c299 4c9ec2                jmp ++
   588  c29c a931               +  lda #'1'
   589  c29e 20d2ff             ++ jsr SendChar
   590  c2a1 98                    tya
   591  c2a2 290f                  and #$0f  ;ones of hours
   592  c2a4 20e2c2                jsr PrintHexNibble
   593  c2a7 a93a                  lda #':'
   594  c2a9 20d2ff                jsr SendChar
   595  c2ac ad0adc                lda TODMinBCD
   596  c2af 20d5c2                jsr PrintHexByte
   597  c2b2 a93a                  lda #':'
   598  c2b4 20d2ff                jsr SendChar
   599  c2b7 ad09dc                lda TODSecBCD
   600  c2ba 20d5c2                jsr PrintHexByte
   601                             ;lda #'.'
   602                             ;jsr SendChar
   603  c2bd ad08dc                lda TODTenthSecBCD ;have to read 10ths to release latch
   604                             ;jsr PrintHexNibble
   605  c2c0 98                    tya ;am/pm (pre latch release)
   606  c2c1 2980                  and #$80
   607  c2c3 d005                  bne +
   608  c2c5 a941                  lda #'a'
   609  c2c7 4cccc2                jmp ++
   610  c2ca a950               +  lda #'p'
   611  c2cc 20d2ff             ++ jsr SendChar
   612  c2cf a94d                  lda #'m'
   613  c2d1 20d2ff                jsr SendChar
   614  c2d4 60                    rts
   615                             
   616                          PrintHexByte:
   617                             ;Print byte value stored in acc in hex (2 chars)
   618  c2d5 48                    pha
   619  c2d6 4a                    lsr
   620  c2d7 4a                    lsr
   621  c2d8 4a                    lsr
   622  c2d9 4a                    lsr
   623  c2da 20e2c2                jsr PrintHexNibble
   624  c2dd 68                    pla
   625                             ;pha   ; preserve acc on return?
   626  c2de 20e2c2                jsr PrintHexNibble
   627                             ;pla
   628  c2e1 60                    rts
   629                             
   630                          PrintHexNibble:   
   631                             ;Print value stored in lower nible acc in hex
   632                             ;trashes acc
   633  c2e2 290f                  and #$0f
   634  c2e4 c90a                  cmp #$0a
   635  c2e6 1006                  bpl l 
   636  c2e8 18                    clc
   637  c2e9 6930                  adc #'0'
   638  c2eb 4cf1c2                jmp pr
   639  c2ee 18                 l  clc
   640  c2ef 6937                  adc #'a'-$0a
   641  c2f1 20d2ff             pr jsr SendChar
   642  c2f4 60                    rts
   643                          
   644                          PrintOnOff:
   645                             ;Print "On" or "Off" based on Zero flag
   646                             ;uses A and Y regs
   647  c2f5 d007                  bne +
   648  c2f7 a928                  lda #<MsgOff
   649  c2f9 a0c9                  ldy #>MsgOff
   650  c2fb 4c02c3                jmp ++
   651  c2fe a924               +  lda #<MsgOn
   652  c300 a0c9                  ldy #>MsgOn
   653  c302 201eab             ++ jsr PrintString 
   654  c305 60                    rts
   655                          
   656                          Print4CharTableHiNib
   657  c306 4a                    lsr
   658  c307 4a                    lsr
   659  c308 4a                    lsr
   660  c309 4a                    lsr ; move to lower nibble
   661                          Print4CharTable:   
   662                          ;prints 4 chars from a table of continuous 4 char sets (no termination)
   663                          ;X=table base lo, y=table base high, acc=index to item# (63 max)
   664                          ;   and #0xfc 
   665  c30a 86fb                  stx PtrAddrLo
   666  c30c 84fc                  sty PtrAddrHi
   667  c30e 0a                    asl
   668  c30f 0a                    asl  ;mult by 4
   669  c310 a8                    tay
   670  c311 b1fb               -  lda (PtrAddrLo),y
   671  c313 20d2ff                jsr SendChar   ;type (4 chars)
   672  c316 c8                    iny
   673  c317 98                    tya
   674  c318 2903                  and #3
   675  c31a d0f5                  bne -
   676  c31c 60                    rts
   677                             
   678                          ; ******************************* SID stuff ******************************* 
   679                          
   680                          MIDI2SID:
   681  c31d 2096c5                jsr SIDMusicOff
   682  c320 a9fa                  lda #<MsgBanner
   683  c322 a0c5                  ldy #>MsgBanner
   684  c324 201eab                jsr PrintString 
   685  c327 a970                  lda #<MsgM2SPolyMenu
   686  c329 a0c7                  ldy #>MsgM2SPolyMenu
   687  c32b 201eab                jsr PrintString 
   688                             ;clear SID regs
   689  c32e a900                  lda #0
   690  c330 aa                    tax
   691  c331 9d00d4             -  sta SIDLoc, x
   692  c334 e8                    inx
   693  c335 e019                  cpx #(EndSIDRegs-StartSIDRegs)
   694  c337 d0f8                  bne -
   695                          
   696                             ;  set default local settings:
   697  c339 a90f                  lda #0x0f ; full volume
   698  c33b 8d18d4                sta SIDLoc+rRegSIDVolFltSel-StartSIDRegs
   699  c33e a902                  lda #0x02 ; 12.5% duty cycle (12 bit resolution, lo reg left at 0)
   700  c340 8d3803                sta SIDDutyHi
   701  c343 8d03d4                sta SIDLoc+rRegSIDDutyHi1-StartSIDRegs
   702  c346 8d0ad4                sta SIDLoc+rRegSIDDutyHi2-StartSIDRegs
   703  c349 8d11d4                sta SIDLoc+rRegSIDDutyHi3-StartSIDRegs
   704  c34c a940                  lda #0x40 ; pulse wave
   705  c34e 8d3503                sta SIDVoicCont
   706  c351 8d04d4                sta SIDLoc+rRegSIDVoicCont1-StartSIDRegs
   707  c354 8d0bd4                sta SIDLoc+rRegSIDVoicCont2-StartSIDRegs
   708  c357 8d12d4                sta SIDLoc+rRegSIDVoicCont3-StartSIDRegs
   709  c35a a923                  lda #0x23 ; Att=16mS, Dec=72mS
   710  c35c 8d3603                sta SIDAttDec
   711  c35f 8d05d4                sta SIDLoc+rRegSIDAttDec1-StartSIDRegs
   712  c362 8d0cd4                sta SIDLoc+rRegSIDAttDec2-StartSIDRegs
   713  c365 8d13d4                sta SIDLoc+rRegSIDAttDec3-StartSIDRegs
   714  c368 a934                  lda #0x34 ; Sus=20%, Rel=114mS
   715  c36a 8d3703                sta SIDSusRel
   716  c36d 8d06d4                sta SIDLoc+rRegSIDSusRel1-StartSIDRegs
   717  c370 8d0dd4                sta SIDLoc+rRegSIDSusRel2-StartSIDRegs
   718  c373 8d14d4                sta SIDLoc+rRegSIDSusRel3-StartSIDRegs
   719                             
   720                          M2SDispUpdate:  ;upadte all M2S status display values
   721  c376 a999                  lda #NameColor
   722  c378 20d2ff                jsr SendChar
   723  c37b a205                  ldx # 5 ;row  Triangle
   724  c37d a00e                  ldy #M2SDataColumn ;col
   725  c37f 18                    clc
   726  c380 20f0ff                jsr SetCursor
   727  c383 ad3503                lda SIDVoicCont
   728  c386 2910                  and #0x10  
   729  c388 20f5c2                jsr PrintOnOff
   730                             
   731  c38b a206                  ldx # 6 ;row  Sawtooth
   732  c38d a00e                  ldy #M2SDataColumn ;col
   733  c38f 18                    clc
   734  c390 20f0ff                jsr SetCursor
   735  c393 ad3503                lda SIDVoicCont
   736  c396 2920                  and #0x20  
   737  c398 20f5c2                jsr PrintOnOff
   738                             
   739  c39b a207                  ldx # 7 ;row  Pulse
   740  c39d a00e                  ldy #M2SDataColumn ;col
   741  c39f 18                    clc
   742  c3a0 20f0ff                jsr SetCursor
   743  c3a3 ad3503                lda SIDVoicCont
   744  c3a6 2940                  and #0x40  
   745  c3a8 20f5c2                jsr PrintOnOff
   746                             
   747  c3ab a208                  ldx #8 ;row  Duty Cycle
   748  c3ad a00e                  ldy #M2SDataColumn ;col
   749  c3af 18                    clc
   750  c3b0 20f0ff                jsr SetCursor
   751  c3b3 a2e4                  ldx #<TblM2SDutyPct
   752  c3b5 a0c8                  ldy #>TblM2SDutyPct
   753  c3b7 ad3803                lda SIDDutyHi  ;duty cycle most sig nib = bits 3:0
   754  c3ba 290f                  and #$0f
   755  c3bc 200ac3                jsr Print4CharTable
   756  c3bf a925                  lda #'%'
   757  c3c1 20d2ff                jsr SendChar
   758                             
   759  c3c4 a209                  ldx # 9 ;row  Noise
   760  c3c6 a00e                  ldy #M2SDataColumn ;col
   761  c3c8 18                    clc
   762  c3c9 20f0ff                jsr SetCursor
   763  c3cc ad3503                lda SIDVoicCont
   764  c3cf 2980                  and #0x80  
   765  c3d1 20f5c2                jsr PrintOnOff
   766                           
   767  c3d4 a20b                  ldx #11 ;row  attack
   768  c3d6 a00e                  ldy #M2SDataColumn ;col
   769  c3d8 18                    clc
   770  c3d9 20f0ff                jsr SetCursor
   771  c3dc a224                  ldx #<TblM2SAttack
   772  c3de a0c8                  ldy #>TblM2SAttack
   773  c3e0 ad3603                lda SIDAttDec  ;attack = bits 7:4
   774  c3e3 2006c3                jsr Print4CharTableHiNib
   775  c3e6 a9d3                  lda #'S'
   776  c3e8 20d2ff                jsr SendChar
   777                          
   778  c3eb a20c                  ldx #12 ;row  decay
   779  c3ed a00e                  ldy #M2SDataColumn ;col
   780  c3ef 18                    clc
   781  c3f0 20f0ff                jsr SetCursor
   782  c3f3 a264                  ldx #<TblM2SDecayRelease
   783  c3f5 a0c8                  ldy #>TblM2SDecayRelease
   784  c3f7 ad3603                lda SIDAttDec  ;decay = bits 3:0
   785  c3fa 290f                  and #$0f
   786  c3fc 200ac3                jsr Print4CharTable
   787  c3ff a9d3                  lda #'S'
   788  c401 20d2ff                jsr SendChar
   789                          
   790  c404 a20d                  ldx #13 ;row  sustain
   791  c406 a00e                  ldy #M2SDataColumn ;col
   792  c408 18                    clc
   793  c409 20f0ff                jsr SetCursor
   794  c40c a2a4                  ldx #<TblM2SSustPct
   795  c40e a0c8                  ldy #>TblM2SSustPct
   796  c410 ad3703                lda SIDSusRel   ;sustain = bits 7:4
   797  c413 2006c3                jsr Print4CharTableHiNib
   798  c416 a925                  lda #'%'
   799  c418 20d2ff                jsr SendChar
   800                          
   801  c41b a20e                  ldx #14 ;row  release
   802  c41d a00e                  ldy #M2SDataColumn ;col
   803  c41f 18                    clc
   804  c420 20f0ff                jsr SetCursor
   805  c423 a264                  ldx #<TblM2SDecayRelease
   806  c425 a0c8                  ldy #>TblM2SDecayRelease
   807  c427 ad3703                lda SIDSusRel  ;release = bits 3:0
   808  c42a 290f                  and #$0f
   809  c42c 200ac3                jsr Print4CharTable
   810  c42f a9d3                  lda #'S'
   811  c431 20d2ff                jsr SendChar
   812                          
   813                          ;continue into the main loop...
   814                          M2SUpdateKeyInLoop:
   815                          ;refresh dynamic SID regs from MIDI:   todo: move this to an interrupt?
   816  c434 ad3503                lda SIDVoicCont  ;waveform in upper nibble
   817  c437 0d12de                ora IO1Port+rRegSIDVoicCont1 ;latch bit (0) from MIDI
   818  c43a 8d04d4                sta SIDLoc+rRegSIDVoicCont1-StartSIDRegs 
   819  c43d ad0fde                lda IO1Port+rRegSIDFreqHi1 
   820  c440 8d01d4                sta SIDLoc+rRegSIDFreqHi1-StartSIDRegs 
   821  c443 ad0ede                lda IO1Port+rRegSIDFreqLo1 
   822  c446 8d00d4                sta SIDLoc+rRegSIDFreqLo1-StartSIDRegs 
   823                          
   824  c449 ad3503                lda SIDVoicCont  ;waveform in upper nibble
   825  c44c 0d19de                ora IO1Port+rRegSIDVoicCont2 ;latch bit (0) from MIDI
   826  c44f 8d0bd4                sta SIDLoc+rRegSIDVoicCont2-StartSIDRegs 
   827  c452 ad16de                lda IO1Port+rRegSIDFreqHi2 
   828  c455 8d08d4                sta SIDLoc+rRegSIDFreqHi2-StartSIDRegs 
   829  c458 ad15de                lda IO1Port+rRegSIDFreqLo2 
   830  c45b 8d07d4                sta SIDLoc+rRegSIDFreqLo2-StartSIDRegs 
   831                          
   832  c45e ad3503                lda SIDVoicCont  ;waveform in upper nibble
   833  c461 0d20de                ora IO1Port+rRegSIDVoicCont3 ;latch bit (0) from MIDI
   834  c464 8d12d4                sta SIDLoc+rRegSIDVoicCont3-StartSIDRegs 
   835  c467 ad1dde                lda IO1Port+rRegSIDFreqHi3 
   836  c46a 8d0fd4                sta SIDLoc+rRegSIDFreqHi3-StartSIDRegs 
   837  c46d ad1cde                lda IO1Port+rRegSIDFreqLo3 
   838  c470 8d0ed4                sta SIDLoc+rRegSIDFreqLo3-StartSIDRegs 
   839                          
   840  c473 2079c2                jsr DisplayTime
   841  c476 a213                  ldx #19 ;row   ;print note vals
   842  c478 a003                  ldy #3  ;col
   843  c47a 18                    clc
   844  c47b 20f0ff                jsr SetCursor
   845  c47e a999                  lda #NameColor
   846  c480 20d2ff                jsr SendChar
   847  c483 a928                  lda #<IO1Port+rRegSIDStrStart
   848  c485 a0de                  ldy #>IO1Port+rRegSIDStrStart
   849  c487 201eab                jsr PrintString 
   850                             
   851  c48a 20e4ff                jsr GetIn
   852  c48d f0a5                  beq M2SUpdateKeyInLoop
   853                             
   854  c48f c954                  cmp #'t'  ;Triangle
   855  c491 d00d                  bne +
   856  c493 a910                  lda #0x10
   857  c495 4d3503                eor SIDVoicCont
   858  c498 2970                  and #0x70  ;never combine with noise
   859  c49a 8d3503                sta SIDVoicCont
   860  c49d 4c76c3                jmp M2SDispUpdate
   861                          
   862  c4a0 c957               +  cmp #'w'  ;saWtooth
   863  c4a2 d00d                  bne +
   864  c4a4 a920                  lda #0x20 
   865  c4a6 4d3503                eor SIDVoicCont
   866  c4a9 2970                  and #0x70  ;never combine with noise
   867  c4ab 8d3503                sta SIDVoicCont
   868  c4ae 4c76c3                jmp M2SDispUpdate
   869                          
   870  c4b1 c950               +  cmp #'p'  ;Pulse
   871  c4b3 d00d                  bne +
   872  c4b5 a940                  lda #0x40 
   873  c4b7 4d3503                eor SIDVoicCont
   874  c4ba 2970                  and #0x70  ;never combine with noise
   875  c4bc 8d3503                sta SIDVoicCont
   876  c4bf 4c76c3                jmp M2SDispUpdate
   877                          
   878  c4c2 c955               +  cmp #'u'  ;dUty cycle
   879  c4c4 d013                  bne +
   880  c4c6 ae3803                ldx SIDDutyHi  ;duty cycle most sig nib = bits 3:0, upper unused
   881  c4c9 e8                    inx
   882  c4ca 8e3803                stx SIDDutyHi ;apply change at time of update
   883  c4cd 8e03d4                stx SIDLoc+rRegSIDDutyHi1-StartSIDRegs
   884  c4d0 8e0ad4                stx SIDLoc+rRegSIDDutyHi2-StartSIDRegs
   885  c4d3 8e11d4                stx SIDLoc+rRegSIDDutyHi3-StartSIDRegs
   886  c4d6 4c76c3                jmp M2SDispUpdate
   887                          
   888  c4d9 c94e               +  cmp #'n'  ;Noise
   889  c4db d008                  bne +
   890  c4dd a980                  lda #0x80 
   891                             ;eor SIDVoicCont  ;doesn't play nice with others
   892  c4df 8d3503                sta SIDVoicCont
   893  c4e2 4c76c3                jmp M2SDispUpdate
   894                          
   895  c4e5 c941               +  cmp #'a'  ;Attack
   896  c4e7 d015                  bne +
   897  c4e9 ad3603                lda SIDAttDec  ;attack = bits 7:4
   898  c4ec 18                    clc
   899  c4ed 6910                  adc #$10
   900  c4ef 8d3603                sta SIDAttDec ;apply change at time of update
   901  c4f2 8d05d4                sta SIDLoc+rRegSIDAttDec1-StartSIDRegs
   902  c4f5 8d0cd4                sta SIDLoc+rRegSIDAttDec2-StartSIDRegs
   903  c4f8 8d13d4                sta SIDLoc+rRegSIDAttDec3-StartSIDRegs
   904  c4fb 4c76c3                jmp M2SDispUpdate
   905                          
   906  c4fe c944               +  cmp #'d'  ;Decay
   907  c500 d021                  bne +
   908  c502 ad3603                lda SIDAttDec  ;decay = bits 3:0
   909  c505 aa                    tax
   910  c506 290f                  and #$0f
   911  c508 c90f                  cmp #$0f
   912  c50a d006                  bne dok
   913  c50c 8a                    txa
   914  c50d 29f0                  and #$f0 ;Wrap Around without overflow
   915  c50f 4c14c5                jmp dcnt
   916                          dok   
   917  c512 e8                    inx
   918  c513 8a                    txa
   919                          dcnt
   920  c514 8d3603                sta SIDAttDec ;apply change at time of update
   921  c517 8d05d4                sta SIDLoc+rRegSIDAttDec1-StartSIDRegs
   922  c51a 8d0cd4                sta SIDLoc+rRegSIDAttDec2-StartSIDRegs
   923  c51d 8d13d4                sta SIDLoc+rRegSIDAttDec3-StartSIDRegs
   924  c520 4c76c3                jmp M2SDispUpdate
   925                          
   926  c523 c953               +  cmp #'s'  ;Sustain
   927  c525 d015                  bne +
   928  c527 ad3703                lda SIDSusRel  ;sustain = bits 7:4
   929  c52a 18                    clc
   930  c52b 6910                  adc #$10
   931  c52d 8d3703                sta SIDSusRel ;apply change at time of update
   932  c530 8d06d4                sta SIDLoc+rRegSIDSusRel1-StartSIDRegs
   933  c533 8d0dd4                sta SIDLoc+rRegSIDSusRel2-StartSIDRegs
   934  c536 8d14d4                sta SIDLoc+rRegSIDSusRel3-StartSIDRegs
   935  c539 4c76c3                jmp M2SDispUpdate
   936                          
   937  c53c c952               +  cmp #'r'  ;Release
   938  c53e d021                  bne +
   939  c540 ad3703                lda SIDSusRel  ;release = bits 3:0
   940  c543 aa                    tax
   941  c544 290f                  and #$0f
   942  c546 c90f                  cmp #$0f
   943  c548 d006                  bne rok
   944  c54a 8a                    txa
   945  c54b 29f0                  and #$f0 ;Wrap Around without overflow
   946  c54d 4c52c5                jmp rcnt
   947                          rok   
   948  c550 e8                    inx
   949  c551 8a                    txa
   950                          rcnt
   951  c552 8d3703                sta SIDSusRel ;apply change at time of update
   952  c555 8d06d4                sta SIDLoc+rRegSIDSusRel1-StartSIDRegs
   953  c558 8d0dd4                sta SIDLoc+rRegSIDSusRel2-StartSIDRegs
   954  c55b 8d14d4                sta SIDLoc+rRegSIDSusRel3-StartSIDRegs
   955  c55e 4c76c3                jmp M2SDispUpdate
   956                          
   957  c561 c958               +  cmp #'x'  ;Exit M2S
   958  c563 d004                  bne +
   959  c565 20bbc5                jsr SIDVoicesOff
   960  c568 60                    rts 
   961                          
   962  c569 4c34c4             +  jmp M2SUpdateKeyInLoop
   963                          
   964                             
   965                          SIDMusicOn:  ;Start SID interrupt
   966  c56c a97f                  lda #$7f    ;disable all ints
   967  c56e 8d0ddc                sta $dc0d   ;CIA1 int ctl
   968  c571 ad0ddc                lda $dc0d   ;CIA1 int ctl    reading clears
   969  c574 78                    sei
   970  c575 a901                  lda #$01    ;raster compare enable
   971  c577 8d1ad0                sta $d01a   ;irq mask reg
   972  c57a 8d19d0                sta $d019   ;ACK any raster IRQs
   973  c57d a964                  lda #100    ;mid screen
   974  c57f 8d12d0                sta $d012   ;raster scan line compare reg
   975  c582 ad11d0                lda $d011   ;VIC ctl reg fine scrolling/control
   976  c585 297f                  AND #$7f    ;bit 7 is bit 8 of scan line compare
   977  c587 8d11d0                sta $d011   ;VIC ctl reg fine scrolling/control
   978  c58a a9c7                  lda #<irqRastSID
   979  c58c a2c5                  ldx #>irqRastSID
   980  c58e 8d1403                sta $314    ;CINV, HW IRQ Int Lo
   981  c591 8e1503                stx $315    ;CINV, HW IRQ Int Hi
   982  c594 58                    cli
   983  c595 60                    rts
   984                          
   985                          SIDMusicOff:  ;stop SID interrupt
   986  c596 78                    sei
   987  c597 a931                  lda #<IRQDefault
   988  c599 a2ea                  ldx #>IRQDefault
   989  c59b 8d1403                sta $314   ;CINV, HW IRQ Int Lo
   990  c59e 8e1503                stx $315   ;CINV, HW IRQ Int Hi
   991  c5a1 a981                  lda #$81
   992  c5a3 8d0ddc                sta $dc0d  ;CIA int ctl
   993  c5a6 a900                  lda #0
   994  c5a8 8d1ad0                sta $d01a  ;irq enable
   995  c5ab ee19d0                inc $d019
   996  c5ae ad0ddc                lda $dc0d  ;CIA int ctl
   997                             ;jsr SIDCodeRAM  ;turns voices off, but resets song to start
   998  c5b1 20bbc5                jsr SIDVoicesOff
   999  c5b4 58                    cli 
  1000  c5b5 a904                  lda #BorderColor
  1001  c5b7 8d20d0                sta BorderColorReg   ;restore border in case we ended in mid region
  1002  c5ba 60                    rts
  1003                          
  1004                          SIDVoicesOff:
  1005  c5bb a900                  lda #0x00 ; turn 3 voices off
  1006  c5bd 8d04d4                sta SIDLoc+rRegSIDVoicCont1-StartSIDRegs
  1007  c5c0 8d0bd4                sta SIDLoc+rRegSIDVoicCont2-StartSIDRegs
  1008  c5c3 8d12d4                sta SIDLoc+rRegSIDVoicCont3-StartSIDRegs 
  1009  c5c6 60                    rts
  1010                             
  1011                          irqRastSID:
  1012  c5c7 ee19d0                inc $d019   ;ACK raster IRQs
  1013  c5ca ee20d0                inc BorderColorReg ;tweak display border
  1014  c5cd 200310                jsr SIDCodeRAM+3 ;Play the music
  1015  c5d0 a9e2                  lda #<irqRast2
  1016  c5d2 a2c5                  ldx #>irqRast2
  1017  c5d4 8d1403                sta $314    ;CINV, HW IRQ Int Lo
  1018  c5d7 8e1503                stx $315    ;CINV, HW IRQ Int Hi
  1019  c5da a9c8                  lda #200    ;loweer part of screen
  1020  c5dc 8d12d0                sta $d012   ;raster scan line compare reg
  1021  c5df 4c31ea                jmp IRQDefault
  1022                          
  1023                          irqRast2:
  1024  c5e2 ee19d0                inc $d019   ;ACK raster IRQs
  1025  c5e5 ce20d0                dec BorderColorReg ;tweak it back
  1026  c5e8 a9c7                  lda #<irqRastSID
  1027  c5ea a2c5                  ldx #>irqRastSID
  1028  c5ec 8d1403                sta $314    ;CINV, HW IRQ Int Lo
  1029  c5ef 8e1503                stx $315    ;CINV, HW IRQ Int Hi
  1030  c5f2 a964                  lda #100    ;upper part of screen
  1031  c5f4 8d12d0                sta $d012   ;raster scan line compare reg
  1032                             
  1033  c5f7 4c31ea                jmp IRQDefault
  1034                          
  1035                          ; ******************************* Strings/Messages ******************************* 
  1036                          MmmmmmmmmmessagesText:
  1037                          MsgBanner:    
  1038  c5fa 930e9c1220202020...   !tx ChrClear, ChrToLower, ChrPurple, ChrRvsOn, "            TeensyROM v0.01             ", ChrRvsOff, 0
  1039                          MsgFrom:    
  1040  c628 0d9ac6524f4d2000      !tx ChrReturn, SourcesColor, "From ", 0 
  1041                          MsgSelect:
  1042  c630 9ad34f5552434553...   !tx SourcesColor, "Sources:          "
  1043  c643 129ed550921e2f12...   !tx ChrRvsOn, OptionColor, "Up", ChrRvsOff, MenuMiscColor, "/", ChrRvsOn, OptionColor, "Dn", ChrRvsOff, MenuMiscColor, "CRSR: Page", ChrReturn
  1044  c65b 20129ec631929a20...   !tx " ", ChrRvsOn, OptionColor, "F1", ChrRvsOff, SourcesColor,  " Teensy Mem   "
  1045  c670 20129ec632921e20...   !tx " ", ChrRvsOn, OptionColor, "F2", ChrRvsOff, MenuMiscColor, " Exit to BASIC", ChrReturn
  1046  c686 20129ec633929a20...   !tx " ", ChrRvsOn, OptionColor, "F3", ChrRvsOff, SourcesColor,  " SD Card      "
  1047  c69b 20129ec634921e20...   !tx " ", ChrRvsOn, OptionColor, "F4", ChrRvsOff, MenuMiscColor, " Music on/off", ChrReturn
  1048  c6b0 20129ec635929a20...   !tx " ", ChrRvsOn, OptionColor, "F5", ChrRvsOff, SourcesColor,  " USB Drive    "
  1049  c6c5 20129ec636921e20...   !tx " ", ChrRvsOn, OptionColor, "F6", ChrRvsOff, MenuMiscColor, " Ethernet Time Sync", ChrReturn
  1050  c6e0 20129ec637929a20...   !tx " ", ChrRvsOn, OptionColor, "F7", ChrRvsOff, SourcesColor,  " USB Host     "
  1051  c6f5 20129ec638921e20...   !tx " ", ChrRvsOn, OptionColor, "F8", ChrRvsOff, MenuMiscColor, " Credits/Info"
  1052  c709 00                     !tx 0
  1053                          MsgNoHW:
  1054  c70a 0d0d0e9ed445454e...   !tx ChrReturn, ChrReturn, ChrToLower, ChrYellow, "TeensyROM hardware not detected!!!", ChrReturn, 0
  1055                          MsgNoItems:
  1056  c732 0d9e20ce4f544849...   !tx ChrReturn, OptionColor, " Nothing to show!", 0
  1057                          
  1058                          MsgMenuSD:
  1059  c746 d3c420c34152443a...   !tx "SD Card:", 0
  1060                          MsgMenuTeensy:
  1061  c74f d445454e535920cd...   !tx "Teensy Mem:", 0
  1062                          MsgMenuUSBHost:
  1063  c75b d5d3c220c84f5354...   !tx "USB Host:", 0
  1064                          MsgMenuUSBDrive:
  1065  c765 d5d3c220c4524956...   !tx "USB Drive:", 0
  1066                          
  1067                          MsgM2SPolyMenu:    
  1068  c770 0d0d9acdc9c4c920...   !tx ChrReturn, ChrReturn, SourcesColor, "MIDI 2 SID Polyphonic Mode"
  1069  c78d 0d0d9e                !tx ChrReturn, ChrReturn, OptionColor 
  1070  c790 20202012d4925249...   !tx "   ", ChrRvsOn, "T", ChrRvsOff, "riangle:", ChrReturn
  1071  c79f 20d34112d792544f...   !tx " Sa", ChrRvsOn, "W", ChrRvsOff, "tooth:", ChrReturn
  1072  c7ac 20202012d092554c...   !tx "   ", ChrRvsOn, "P", ChrRvsOff, "ulse:", ChrReturn
  1073  c7b8 2020c412d5925459...   !tx "  D", ChrRvsOn, "U", ChrRvsOff, "ty Cycle:", ChrReturn
  1074  c7c8 20202012ce924f49...   !tx "   ", ChrRvsOn, "N", ChrRvsOff, "oise:", ChrReturn
  1075  c7d4 0d                    !tx ChrReturn
  1076  c7d5 20202012c1925454...   !tx "   ", ChrRvsOn, "A", ChrRvsOff, "ttack:", ChrReturn
  1077  c7e2 20202012c4924543...   !tx "   ", ChrRvsOn, "D", ChrRvsOff, "ecay:", ChrReturn
  1078  c7ee 20202012d3925553...   !tx "   ", ChrRvsOn, "S", ChrRvsOff, "ustain:", ChrReturn
  1079  c7fc 20202012d292454c...   !tx "   ", ChrRvsOn, "R", ChrRvsOff, "elease:", ChrReturn
  1080  c80a 0d                    !tx ChrReturn
  1081  c80b 2020c51258924954...   !tx "  E", ChrRvsOn, "x", ChrRvsOff, "it", ChrReturn
  1082  c814 0d                    !tx ChrReturn
  1083  c815 202020d6312020d6...   !tx "   V1  V2  V3", ChrReturn
  1084  c823 00                    !tx 0
  1085                          TblM2SAttack:  ;4 bytes each, no term
  1086  c824 2020324d2020384d...   !tx "  2m","  8m"," 16m"," 24m"," 38m"," 56m"," 68m"," 80m"
  1087  c844 3130304d3235304d...   !tx "100m","250m","500m","800m","   1","   3","   5","   8"
  1088                          TblM2SDecayRelease:  ;4 bytes each, no term
  1089  c864 2020364d2032344d...   !tx "  6m"," 24m"," 48m"," 72m","114m","168m","204m","240m"
  1090  c884 3330304d3735304d...   !tx "300m","750m"," 1.5"," 2.4","   3","   9","  15","  24"
  1091                          TblM2SSustPct:  ;4 bytes each, no term
  1092  c8a4 20302e3020362e37...   !tx " 0.0"," 6.7","13.3","20.0","26.7","33.3","40.0","46.7"
  1093  c8c4 35332e3336302e30...   !tx "53.3","60.0","66.7","73.3","80.0","86.7","93.3"," 100"
  1094                          TblM2SDutyPct:  ;4 bytes each, no term
  1095  c8e4 20302e3020362e33...   !tx " 0.0"," 6.3","12.5","18.8","25.0","31.3","37.5","43.8"
  1096  c904 35302e3035362e33...   !tx "50.0","56.3","62.5","68.8","75.0","81.3","87.5","93.8"
  1097                          MsgOn:
  1098  c924 cf4e2000              !tx "On ", 0
  1099                          MsgOff:
  1100  c928 cf464600              !tx "Off", 0
  1101                          MsgError:
  1102  c92c 1cc552524f523a20...   !tx ChrRed, "Error: ", 0
  1103                          MsgErrNoData:
  1104  c935 ce4f20c441544120...   !tx "No Data Available", 0
  1105                          MsgErrOverflow:
  1106  c947 cf564552464c4f57...   !tx "Overflow", 0
  1107                          ;MsgErrNoFile:
  1108                          ;   !tx "No File Available", 0
  1109                             
  1110                          TblItemType: ;must match rtNone, rt16k, etc order!
  1111  c950 ce4f4e4531364b20...   !tx "None","16k ","8Hi ","8Lo ","Prg ","Unk ","Crt ","Dir " ;4 bytes each, no term
  1112                             
  1113                             
  1114                          EndOfAllCode = *
  1115                          
